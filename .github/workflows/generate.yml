name: Periodically Generate warlords list

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab.

jobs:
  build:
    name: Build And Generate Warlords List
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Set image info in env
        run: |
          echo "ImageOS=${ImageOS}" >> "$GITHUB_ENV"
          echo "ImageVersion=${ImageVersion}" >> "$GITHUB_ENV"
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # All history for all branches and tags.
          submodules: 'recursive' # All submodules.
      - name: Setup Python
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.2"
          # Optional - x64 or x86 architecture, defaults to x64.
          architecture: x64
      - name: Cache virtualenv
        id: cache_virtualenv
        uses: actions/cache@v4
        with:
          key: venv-periodically-generate-${{ env.ImageOS }}${{ runner.arch }}-${{ env.ImageVersion }}-py${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/requirements-poetry.txt', '**/poetry.lock') }}
          path: .venv
      - name: Install dependencies
        if: steps.cache_virtualenv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source ./.venv/bin/activate
          python -m pip install --progress-bar off --upgrade --require-hashes --requirement requirements-poetry.txt
          poetry install --no-interaction
      - name: Lint And Test
        run: |
          source ./.venv/bin/activate
          python -m pre_commit install -t pre-commit
          python -m pre_commit install -t pre-push
          python -m pre_commit run --all-files --show-diff-on-failure --hook-stage commit
          python -m pre_commit run --all-files --show-diff-on-failure --hook-stage push
      - name: Generate Warlords List
        run: |
          source ./.venv/bin/activate
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          mkdir -p current
          python -m warlords
          mv -f warlords.json current
      - name: Push Current Warlords List To Branch
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: current # The branch to push to.
          FOLDER: current # The folder with the data to push.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically provided by Actions.
          MESSAGE: "Current: ({sha}) {msg}" # The commit message.
          SQUASH_HISTORY: true # All previous commits on the target branch will be discarded.
          SKIP_EMPTY_COMMITS: true # Commits will only be pushed if the contents of the target branch will be changed as a result.
