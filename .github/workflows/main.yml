name: Main

on:
  push:
    branches:
      - '**' # All branch names including slashes.
      - '!current' # Except for current.
      - '!gh-pages' # Except for gh-pages.
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - '**' # All branch names including slashes.
      - '!current' # Except for current.
      - '!gh-pages' # Except for gh-pages.
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab.

jobs:
  build:
    name: Build And Test
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # All history for all branches and tags.
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          # Optional - x64 or x86 architecture, defaults to x64.
          architecture: x64
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
      - name: Install library
        run: |
          poetry install --no-interaction
      - name: Lint And Test
        run: |
          source $VENV
          python -m pre_commit install -t pre-commit
          python -m pre_commit install -t pre-push
          python -m pre_commit run --all-files --show-diff-on-failure --hook-stage commit
          python -m pre_commit run --all-files --show-diff-on-failure --hook-stage push
